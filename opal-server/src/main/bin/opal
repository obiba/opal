#!/bin/sh

# OS specific support.
cygwin=false
case "`uname`" in
CYGWIN*) cygwin=true;;
esac

if [ -z "$JAVA_OPTS" ]
then
  # Set default JAVA_OPTS
  JAVA_OPTS="-Xmx512M"
fi

echo "JAVA_HOME=$JAVA_HOME"
echo "JAVA_OPTS=$JAVA_OPTS"
echo "OPAL_HOME=$OPAL_HOME"

if [ -z "$JAVA_HOME" ]
then
  echo "JAVA_HOME not set."
  exit 1;
fi

if [ -z "$OPAL_HOME" ]
then
  echo "OPAL_HOME not set."
  exit 2;
fi

# resolve links - $0 may be a softlink
OPAL_BIN="$0"

while [ -h "$OPAL_BIN" ]; do
  ls=`ls -ld "$OPAL_BIN"`
  link=`expr "$ls" : '.*-> \(.*\)$'`
  if expr "$link" : '/.*' > /dev/null; then
    OPAL_BIN="$link"
  else
    OPAL_BIN=`dirname "$OPAL_BIN"`/"$link"
  fi
done

# Get standard environment variables
OPAL_BIN=`dirname "$OPAL_BIN"`

if $cygwin; then
  # For Cygwin, ensure paths are in UNIX format before anything is touched
  [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
  [ -n "$OPAL_BIN" ] && OPAL_BIN=`cygpath --unix "$OPAL_BIN"`
  [ -n "$OPAL_HOME" ] && OPAL_HOME=`cygpath --unix "$OPAL_HOME"`
  
  # For Cygwin, switch paths to Windows format before running java  
  JAVA_HOME=`cygpath --absolute --windows "$JAVA_HOME"`
  OPAL_BIN=`cygpath --absolute --windows "$OPAL_BIN"`
  OPAL_HOME=`cygpath --absolute --windows "$OPAL_HOME"`
fi

CLASSPATH=$OPAL_HOME/conf
for f in $(ls "$OPAL_BIN/../lib" | grep jar$); do
  if $cygwin; then
    CLASSPATH=$CLASSPATH\;$OPAL_BIN/../lib/$f
  else
    CLASSPATH=$CLASSPATH:$OPAL_BIN/../lib/$f
  fi
done

[ -e "$OPAL_HOME/logs" ] || mkdir "$OPAL_HOME/logs"
#echo $JAVA_OPTS -cp "$CLASSPATH" -DOPAL_HOME="${OPAL_HOME}" org.obiba.opal.server.OpalServer $@ 2> "${OPAL_HOME}"/logs/opal-session.log
java $JAVA_OPTS -cp "$CLASSPATH" -DOPAL_HOME="${OPAL_HOME}" org.obiba.opal.server.OpalServer $@ 2> "${OPAL_HOME}"/logs/opal-session.log
