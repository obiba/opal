#!/bin/bash

# OS specific support.
cygwin=false
case "`uname`" in
CYGWIN*) cygwin=true;;
esac

if [ -z "$JAVA" ]
then
  # Set default JAVA
  JAVA="java"
  export JAVA
fi

if [ -z "$JAVA_OPTS" ]
then
  # Set default JAVA_OPTS
  JAVA_OPTS="-Xmx2G -XX:MaxPermSize=128M"
  export JAVA_OPTS
fi

# The directory containing the opal shell script
OPAL_BIN_DIR=`dirname $0`
# resolve links - $0 may be a softlink
OPAL_DIST=$(readlink -f $OPAL_BIN_DIR/..)

export OPAL_DIST

export OPAL_LOG=$OPAL_HOME/logs

echo "JAVA=$JAVA"
echo "JAVA_OPTS=$JAVA_OPTS"
echo "OPAL_HOME=$OPAL_HOME"
echo "OPAL_DIST=$OPAL_DIST"

if [ -z "$OPAL_HOME" ]
then
  echo "OPAL_HOME not set."
  exit 2;
fi

if $cygwin; then
  # For Cygwin, ensure paths are in UNIX format before anything is touched
  [ -n "$OPAL_DIST" ] && OPAL_BIN=`cygpath --unix "$OPAL_DIST"`
  [ -n "$OPAL_HOME" ] && OPAL_HOME=`cygpath --unix "$OPAL_HOME"`

  # For Cygwin, switch paths to Windows format before running java
  export OPAL_DIST=`cygpath --absolute --windows "$OPAL_DIST"`
  export OPAL_HOME=`cygpath --absolute --windows "$OPAL_HOME"`
fi

# Java 6 supports wildcard classpath entries
# http://download.oracle.com/javase/6/docs/technotes/tools/solaris/classpath.html
CLASSPATH=$OPAL_HOME/conf:"$OPAL_DIST/lib/*"
if $cygwin; then
  CLASSPATH=$OPAL_HOME/conf;"$OPAL_DIST/lib/*"
fi

[ -e "$OPAL_HOME/logs" ] || mkdir "$OPAL_HOME/logs"

JAVA_DEBUG=-agentlib:jdwp=transport=dt_socket,server=y,address=8000,suspend=n

echo "CLASSPATH=$CLASSPATH"

# Add $JAVA_DEBUG to this line to enable remote JVM debugging (for developers)
$JAVA $JAVA_OPTS $JAVA_DEBUG -cp "$CLASSPATH" -DOPAL_HOME="${OPAL_HOME}" -DOPAL_DIST=${OPAL_DIST} -DOPAL_LOG=${OPAL_LOG} -Dpolyglot.log.file=${OPAL_LOG}/polyglot.log -Dpolyglot.engine.WarnInterpreterOnly=false org.obiba.opal.server.OpalServer $@
