// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.181.2
//   protoc               v3.21.12
// source: OpalR.proto

/* eslint-disable */
import { type AppDto } from './Apps';
import { type PodSpecDto } from './K8s';
import { type EntryDto } from './Opal';

export const protobufPackage = 'OpalR';

export enum RSessionStatus {
  WAITING = 'WAITING',
  BUSY = 'BUSY',
  UNRECOGNIZED = 'UNRECOGNIZED',
}

export interface RProfileDto {
  name: string;
  enabled: boolean;
  restrictedAccess: boolean;
}

export interface RServerClusterDto {
  name: string;
  servers: RServerDto[];
}

export interface RServerDto {
  name: string;
  cluster: string;
  version: string;
  running: boolean;
  tags: string[];
  sessionCount: number;
  busySessionCount: number;
  cores: number;
  freeMemory: number;
  app?: AppDto | undefined;
  pod?: PodSpecDto | undefined;
}

export interface RSessionDto {
  id: string;
  user: string;
  creationDate: string;
  lastAccessDate: string;
  status: RSessionStatus;
  link?: string | undefined;
  context: string;
  profile: string;
  cluster: string;
  server: string;
  currentExecutionTimeMillis: number;
  totalExecutionTimeMillis: number;
}

export interface RPackageDto {
  name: string;
  description: EntryDto[];
  cluster: string;
  rserver: string;
}

export interface RCommandDto {
  id: string;
  script: string;
  status: string;
  createDate: string;
  withResult: boolean;
  startDate?: string | undefined;
  endDate?: string | undefined;
  error?: string | undefined;
}

export interface RWorkspaceDto {
  name: string;
  user: string;
  lastAccessDate: string;
  context: string;
  size: number;
}

export interface RRuntimeErrorDto {}

export interface RSessionActivityDto {
  user: string;
  context: string;
  profile: string;
  createdDate: string;
  updatedDate: string;
  executionTimeMillis: number;
}

export interface RActivitySummaryDto {
  user: string;
  context: string;
  profile: string;
  startDate: string;
  endDate: string;
  executionTimeMillis: number;
  sessionsCount: number;
}
