<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

  <bean id="datasourceClasses" class="org.obiba.magma.datasource.hibernate.support.AnnotationConfigurationHelper"/>
  <bean id="auditClasses" class="org.obiba.magma.audit.hibernate.support.AnnotationConfigurationHelper"/>

  <!-- The Hibernate SessionFactory -->
  <bean id="keySessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
    <qualifier value="opal-key"/>
    <property name="dataSource" ref="keyDataSource"/>
    <property name="namingStrategy">
      <bean class="org.obiba.magma.hibernate.cfg.MagmaNamingStrategy"/>
    </property>
    <property name="annotatedClasses">
      <bean factory-bean="datasourceClasses" factory-method="getAnnotatedTypes"/>
    </property>

    <!-- This is required to allow Hibernate to register transaction synchronisations. -->
    <property name="jtaTransactionManager" ref="jotm"/>
    <!-- By setting this to false, the CurrentSessionContext implementation must be specified through hibernate.current_session_context_class -->
    <property name="exposeTransactionAwareSessionFactory" value="false"/>

    <property name="configurationClass" value="org.hibernate.cfg.AnnotationConfiguration"/>
    <property name="hibernateProperties">
      <bean class="org.obiba.opal.core.runtime.jdbc.HsqlDialectOverride">
        <property name="properties">
          <props>
            <prop key="hibernate.generate_statistics">true</prop>
            <prop key="hibernate.cache.use_structured_entries">true</prop>
            <prop key="hibernate.cache.use_query_cache">true</prop>
            <prop key="hibernate.cache.use_second_level_cache">true</prop>
            <prop key="hibernate.cache.region.factory_class">net.sf.ehcache.hibernate.EhCacheRegionFactory</prop>
            <prop key="net.sf.ehcache.configurationResourceName">/opal-ehcache.xml</prop>
            <prop key="hibernate.dialect">${org.obiba.opal.datasource.key.dialect}</prop>

            <!-- Set the CurrentSessionContext to JTASessionContext: a Hibernate Session will be available when a transaction 
              is active -->
            <prop key="hibernate.current_session_context_class">jta</prop>

            <!-- Overridden to lookup the JOTM UserTransaction directly instead of a JNDI lookup -->
            <prop key="hibernate.transaction.factory_class">org.obiba.opal.core.tx.JOTMTransactionFactory</prop>
            <prop key="hibernate.transaction.auto_close_session">true</prop>
            <prop key="hibernate.transaction.flush_before_completion">true</prop>
          </props>
        </property>
      </bean>
    </property>
  </bean>

  <!-- The Hibernate SessionFactory -->
  <bean id="opalSessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
    <qualifier value="opal-data"/>
    <property name="dataSource" ref="opalDataSource"/>
    <property name="namingStrategy">
      <bean class="org.obiba.magma.hibernate.cfg.MagmaNamingStrategy"/>
    </property>
    <property name="annotatedClasses">
      <bean class="org.obiba.opal.core.support.OpalAnnotationConfigurationHelper">
        <property name="additionalClasses">
          <list>
            <bean factory-bean="datasourceClasses" factory-method="getAnnotatedTypes"/>
          </list>
        </property>
      </bean>
    </property>

    <!-- This is required to allow Hibernate to register transaction synchronisations. -->
    <property name="jtaTransactionManager" ref="jotm"/>
    <!-- By setting this to false, the CurrentSessionContext implementation must be specified through hibernate.current_session_context_class -->
    <property name="exposeTransactionAwareSessionFactory" value="false"/>

    <property name="configurationClass" value="org.hibernate.cfg.AnnotationConfiguration"/>
    <property name="hibernateProperties">
      <bean class="org.obiba.opal.core.runtime.jdbc.HsqlDialectOverride">
        <property name="properties">
          <props>
            <prop key="hibernate.generate_statistics">true</prop>
            <prop key="hibernate.cache.use_structured_entries">true</prop>
            <prop key="hibernate.cache.use_query_cache">true</prop>
            <prop key="hibernate.cache.use_second_level_cache">true</prop>
            <prop key="hibernate.cache.region.factory_class">net.sf.ehcache.hibernate.EhCacheRegionFactory</prop>
            <prop key="net.sf.ehcache.configurationResourceName">/opal-ehcache.xml</prop>
            <prop key="hibernate.dialect">${org.obiba.opal.datasource.opal.dialect}</prop>

            <!-- Set the CurrentSessionContext to JTASessionContext: a Hibernate Session will be available when a transaction 
              is active -->
            <prop key="hibernate.current_session_context_class">jta</prop>

            <!-- Overridden to lookup the JOTM UserTransaction directly instead of a JNDI lookup -->
            <prop key="hibernate.transaction.factory_class">org.obiba.opal.core.tx.JOTMTransactionFactory</prop>
            <prop key="hibernate.transaction.auto_close_session">true</prop>
            <prop key="hibernate.transaction.flush_before_completion">true</prop>
          </props>
        </property>
      </bean>
    </property>
  </bean>

  <bean id="hibernate-properties" class="org.obiba.opal.core.runtime.jdbc.HsqlDialectOverride">
    <qualifier value="hibernate"/>
    <property name="properties">
      <props>
        <prop key="hibernate.generate_statistics">true</prop>
        <prop key="hibernate.cache.use_structured_entries">true</prop>
        <prop key="hibernate.cache.use_query_cache">true</prop>
        <prop key="hibernate.cache.use_second_level_cache">true</prop>
        <prop key="hibernate.cache.region.factory_class">net.sf.ehcache.hibernate.EhCacheRegionFactory</prop>
        <prop key="net.sf.ehcache.configurationResourceName">/opal-ehcache.xml</prop>

        <!-- Set the CurrentSessionContext to JTASessionContext: a Hibernate Session will be available when a transaction 
          is active -->
        <prop key="hibernate.current_session_context_class">jta</prop>

        <!-- Overridden to lookup the JOTM UserTransaction directly instead of a JNDI lookup -->
        <prop key="hibernate.transaction.factory_class">org.obiba.opal.core.tx.JOTMTransactionFactory</prop>
        <prop key="hibernate.transaction.auto_close_session">true</prop>
        <prop key="hibernate.transaction.flush_before_completion">true</prop>
      </props>
    </property>
  </bean>

</beans>