
package Search;

option java_package = "org.obiba.opal.web.model";

message QueryTermsDto {
  repeated QueryTermDto queries = 1;
}

message QueryTermDto {
  optional bool global = 1;
  optional string facet = 2; // name of the facet, if not provided no facet is returned for this term

  extensions 1000 to max;
}

message VariableTermDto {
  required string variable = 1;

  extend QueryTermDto {
    optional VariableTermDto field = 1001;
  }
}

message FilterDto {
  required string variable = 1;
  optional bool not = 2;

  extend LogicalTermDto {
    repeated FilterDto filters = 1001;
  }

  extensions 1000 to max;
}

enum TermOperator {
  AND_OP = 0;
  OR_OP = 1;
}

message LogicalTermDto {
  required TermOperator operator = 1 [default = AND_OP];

  extend QueryTermDto {
    optional LogicalTermDto filter = 3000;
    optional LogicalTermDto facet_filter = 3001;
  }

  extensions 1000 to max;
}

message InTermDto {
  repeated string values = 1;
  optional int32 minimum_match = 2 [default = 1];

  extend FilterDto {
    optional InTermDto terms = 1000;
  }
}

// do we need specialized ranges depending on the value type ?
message RangeTermDto {
  optional string from = 1;
  optional string to = 2;
  optional bool include_lower = 3 [default = true];
  optional bool include_upper = 4 [default = false];

  extend FilterDto {
    optional RangeTermDto range = 1001;
  }
}

message QueryResultDto {
  repeated FacetResultDto facets = 1;
}

message FacetResultDto {
    message FilterResultDto {
        required int32 count = 1;
    }

    message TermFrequencyResultDto {
        required string term = 1;
        required int32 count = 2;
    }

    message StatisticalResultDto {
        required int64 count = 1 [default = 0];
        optional float total = 2;
        optional float min = 3;
        optional float max = 4;
        optional float mean = 5;
        optional float sum_of_squares = 6;
        optional float variance = 7;
        optional float std_deviation = 8;
    }

    required string facet = 1;
    required int32 total_hits = 2;

    repeated TermFrequencyResultDto frequencies = 3;
    optional StatisticalResultDto statistics = 4;
    repeated FilterResultDto filters = 5;
}