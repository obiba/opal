package Opal;

option java_package = "org.obiba.opal.web.model";

message FunctionalUnitDto {
  required string name = 1;
  required string keyVariableName = 2;
  optional string select = 3;
  optional string description = 4;
}

enum KeyType {
  KEY_PAIR = 0;
  CERTIFICATE = 1;
}

message KeyDto {
  required string alias = 1;
  required string certificate = 2;
  required KeyType keyType = 3;
}

message KeyForm {
  required string alias = 1;

  optional PrivateKeyForm privateForm = 2;
  optional string privateImport = 3;

  optional PublicKeyForm publicForm = 4;
  optional string publicImport = 5;
  optional string certificateFile = 6;

  required KeyType keyType = 7;
}

message PrivateKeyForm {
  required string algo = 1;
  required int32 size = 2;
}

message PublicKeyForm {
  required string name = 1;
  required string organizationalUnit = 2;
  required string organization = 3;
  required string locality = 4;
  required string state = 5;
  required string country = 6;
}

message FileDto {
  required string name = 1;
  required string path = 2;
  enum FileType {
    FILE = 0;
    FOLDER = 1;
  }
  required FileType type = 3;
  repeated FileDto children = 4;
  optional int64 size = 5;
  optional int64 lastModifiedTime = 6;
  required bool readable = 7;
  required bool writable = 8;
}

message LocaleDto {
  required string name = 1; // Locale.toString()
  optional string display = 2; // Locale.getDisplayName(clientLocale)
}


message ReportTemplateDto {
  required string name = 1;
  required string design = 2;
  required string format = 3;
  repeated ParameterDto parameters = 4;
  optional string cron = 5;
  repeated string emailNotification = 6;
  optional string project = 7;
}

message ReportDto {
  required string name = 1;
  required string link = 2;
  optional string publicLink = 3;
  optional int64 size = 4;
  optional int64 lastModifiedTime = 5;
}

message ParameterDto {
  required string key = 1;
  required string value = 2;
}

message Subject {
  enum SubjectType {
    USER = 0;
    GROUP = 1;
  }
  required string principal = 1;
  required SubjectType type = 2;
}

message Acl {
  required Subject subject = 1;
  required string resource = 2;
  repeated string actions = 3;
  required string domain = 4;
}

message Acls {
  required Subject subject = 1;
  repeated Acl acls = 2;
}

enum AclAction {
  DATASOURCE_ALL = 0;
  CREATE_TABLE = 1;
  CREATE_VIEW = 2;
  TABLE_ALL = 3;
  TABLE_READ = 4;
  TABLE_VALUES = 5;
  TABLE_EDIT = 6;
  VIEW_ALL = 7;
  VIEW_READ = 8;
  VIEW_VALUES = 9;
  VIEW_EDIT = 10;
  VIEW_VALUES_EDIT = 11;
  VARIABLE_READ = 12;
  DATABASES_ALL = 13;
  R_SESSION_ALL = 14;
  DATASHIELD_ALL = 15;
  DATASHIELD_SESSION_ALL = 16;
  FILES_ALL = 18;
  FILES_READ = 19;
  FILES_SHARE = 20;
  REPORT_TEMPLATE_ALL = 21;
  REPORT_TEMPLATE_READ = 22;
}

message OpalMap {
  repeated string keys = 1;
  repeated string values = 2;
}

message EntryDto {
  required string key = 1;
  required string value = 2;
}


enum ServiceStatus {
  RUNNING = 1;
  STOPPED = 2;
}

message ServiceDto {
  required string name = 1;
  required ServiceStatus status = 2;
  required string link = 3;
}

message ServiceCfgDto {
  required string name = 1; // service name
  extensions 1000 to max;
}

message ESCfgDto {
  required string clusterName = 1;
  optional string indexName = 2;
  required bool dataNode = 3 [default = true];
  required int32 shards = 4;
  required int32 replicas = 5;
  optional string settings = 6;
  optional bool enabled = 7;
  extend ServiceCfgDto {
    optional ESCfgDto params = 1000;
  }
}

enum TableIndexationStatus {
  NOT_INDEXED = 1; // this table is not indexable
  OUTDATED = 2; // this table is indexable, index is not up-to-date and is not in progress
  IN_PROGRESS = 3; // this table is indexable, index is not up-to-date and is in progress
  UPTODATE = 4; // this table is indexable and index is up-to-date
}

message TableIndexStatusDto {
  required string datasource = 1;
  required string table = 2;
  optional string indexCreated = 3;
  optional string indexLastUpdate = 4;
  optional string tableLastUpdate = 5;
  required ScheduleDto schedule = 6; // if no schedule is defined in the index manager configuration, the default one is returned
  required TableIndexationStatus status = 7;
  optional float progress = 8;
  required string link = 9; // link to this index
}

enum ScheduleType {
  NOT_SCHEDULED = 1;
  MINUTES_5 = 2;
  MINUTES_15 = 3;
  MINUTES_30 = 4;
  HOURLY = 5;
  DAILY = 6;
  WEEKLY = 7;
}

enum Day {
  SUNDAY = 1;
  MONDAY = 2;
  TUESDAY = 3;
  WEDNESDAY = 4;
  THURSDAY = 5;
  FRIDAY = 6;
  SATURDAY = 7;
}

message ScheduleDto {
  required ScheduleType type = 1;
  optional Day day = 2;
  optional int32 hours = 3;
  optional int32 minutes = 4;
}

message UserDto {
  required string name = 1;
  optional string password = 2; // only set when the password is to be updated on POST or PUT
  repeated string groups = 3; // only set when user is from the user table
  optional bool enabled = 4 [default = true];
}

message GroupDto {
  required string name = 1;
  repeated string users = 2;
}

// Extracts from RuntimeMXBean
message OpalEnv {
  required string version = 1; // opal version
  required string vmName = 2;
  required string vmVendor = 3;
  required string vmVersion = 4;
  required string javaVersion = 5;
  repeated EntryDto systemProperties = 6;
}

// Extracts from MemoryMXBean, ThreadMXBean and GarbageCollectorMXBeans
message OpalStatus {
  // http://docs.oracle.com/javase/7/docs/api/java/lang/management/MemoryUsage.html
  message MemoryUsage {
    required int64 init = 1;
    required int64 used = 2;
    required int64 committed = 3;
    required int64 max = 4;
  }
  message ThreadsUsage {
    required int64 count = 1;
    required int64 peak = 2;
  }
  message GarbageCollectorUsage {
    required string name = 1;
    required int64 collectionCount = 2;
    required int64 collectionTime = 3;
  }
  required int64 timestamp = 1;
  required int64 uptime = 2;
  required MemoryUsage heapMemory = 3;
  required MemoryUsage nonHeapMemory = 4;
  required ThreadsUsage threads = 5;
  repeated GarbageCollectorUsage gcs = 6;
}

message GeneralConf {
  required string name = 1 [default = "Opal"];
  repeated string languages = 2; // replaces the property org.obiba.opal.languages
  required string defaultCharSet = 3 [default = "ISO-8859-1"]; // replaces the property org.obiba.opal.charset.default
  optional string publicURL = 4;
}

message AttributeConf {
  message Attr {
    required string name = 1;
    repeated string values = 2; // enumerated values if any
  }
  required string namespace = 1 [default = "opal"];
  optional string description = 2; // description of this set of attributes
  repeated Attr conf = 3;
}

message TaxonomyDto {
  message TermDto {
    required string name = 1;
    repeated TextDto titles = 2;
    repeated TextDto descriptions = 3;
    repeated TermDto terms = 4; // children which path are mapped to attribute values, free value if none
  }
  message VocabularyDto {
    required string name = 1;
    repeated TextDto titles = 2;
    repeated TextDto descriptions = 3;
    repeated TermDto terms = 4;
    required bool repeatable = 5 [default = false]; // allows the corresponding attribute name to be applied multiple times
  }

  message TextDto {
    required string locale = 1 [default = "en"];
    required string text = 2;
  }

  optional string name = 1; // mapped to attribute namespace
  repeated TextDto titles = 2;
  repeated TextDto descriptions = 3;
  repeated VocabularyDto vocabularies = 4;
}

message OpalConf {
  required GeneralConf general = 1;
  repeated TaxonomyDto taxonomies = 2;
}


message VcsCommitInfosDto {
  repeated VcsCommitInfoDto commitInfos = 1;
}

message VcsCommitInfoDto {
  required string author = 1;
  required string date = 2;
  required string comment = 3;
  required string commitId = 4;
  repeated string diffEntries = 5;
}